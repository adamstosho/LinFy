{
    "openapi": "3.0.0",
    "info": {
        "title": "URL Shortener Backend API",
        "version": "1.0.0",
        "description": "API documentation for the URL shortening service"
    },
    "servers": [
        {
            "url": "http://localhost:5000/api",
            "description": "Local Development Server"
        },
        {
            "url": "https://linfy-j0mz.onrender.com/api",
            "description": "Deployed Server"
        }
    ],
    "components": {
        "securitySchemes": {
            "rateLimit": {
                "type": "apiKey",
                "in": "header",
                "name": "X-Rate-Limit",
                "description": "Rate limiting applied (100 requests per 15 minutes)"
            },
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            },
            "apiKeyAuth": {
                "type": "apiKey",
                "in": "header",
                "name": "x-api-key",
                "description": "API key authentication for user endpoints."
            }
        },
        "schemas": {
            "Url": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string"
                    },
                    "originalUrl": {
                        "type": "string",
                        "format": "uri"
                    },
                    "shortUrl": {
                        "type": "string",
                        "format": "uri"
                    },
                    "urlCode": {
                        "type": "string"
                    },
                    "qrCode": {
                        "type": "string",
                        "format": "uri"
                    },
                    "clicks": {
                        "type": "number"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAccessed": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "ipAddress": {
                        "type": "string"
                    },
                    "userAgent": {
                        "type": "string"
                    }
                },
                "required": [
                    "originalUrl",
                    "shortUrl",
                    "urlCode",
                    "qrCode"
                ]
            },
            "UrlHistory": {
                "type": "object",
                "properties": {
                    "originalUrl": {
                        "type": "string",
                        "format": "uri"
                    },
                    "shortUrl": {
                        "type": "string",
                        "format": "uri"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "clicks": {
                        "type": "number"
                    },
                    "qrCode": {
                        "type": "string",
                        "format": "uri"
                    }
                }
            },
            "ShortenRequest": {
                "type": "object",
                "properties": {
                    "originalUrl": {
                        "type": "string",
                        "format": "uri"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    }
                },
                "required": [
                    "originalUrl"
                ]
            },
            "User": {
                "type": "object",
                "properties": {
                    "_id": { "type": "string" },
                    "name": { "type": "string" },
                    "email": { "type": "string", "format": "email" },
                    "apiKeys": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/ApiKey" }
                    }
                },
                "required": ["name", "email"]
            },
            "ApiKey": {
                "type": "object",
                "properties": {
                    "keyId": { "type": "string" },
                    "createdAt": { "type": "string", "format": "date-time" },
                    "lastUsed": { "type": "string", "format": "date-time" }
                }
            },
            "RegisterRequest": {
                "type": "object",
                "properties": {
                    "name": { "type": "string" },
                    "email": { "type": "string", "format": "email" },
                    "password": { "type": "string", "format": "password" }
                },
                "required": ["name", "email", "password"]
            },
            "LoginRequest": {
                "type": "object",
                "properties": {
                    "email": { "type": "string", "format": "email" },
                    "password": { "type": "string", "format": "password" }
                },
                "required": ["email", "password"]
            },
            "LoginResponse": {
                "type": "object",
                "properties": {
                    "token": { "type": "string" },
                    "user": {
                        "type": "object",
                        "properties": {
                            "_id": { "type": "string" },
                            "name": { "type": "string" },
                            "email": { "type": "string", "format": "email" }
                        }
                    }
                }
            },
            "UpdateProfileRequest": {
                "type": "object",
                "properties": {
                    "name": { "type": "string" },
                    "email": { "type": "string", "format": "email" }
                }
            },
            "ChangePasswordRequest": {
                "type": "object",
                "properties": {
                    "oldPassword": { "type": "string", "format": "password" },
                    "newPassword": { "type": "string", "format": "password" }
                },
                "required": ["oldPassword", "newPassword"]
            },
            "MetricsResponse": {
                "type": "object",
                "properties": {
                    "totalUsers": { "type": "integer" },
                    "totalUrls": { "type": "integer" },
                    "totalClicks": { "type": "integer" }
                }
            }
        }
    },
    "paths": {
        "/shorten": {
            "post": {
                "summary": "Shorten a URL",
                "description": "Creates a shortened URL with an associated QR code. Requires authentication via JWT or API key.",
                "tags": ["URL Management"],
                "security": [
                    { "bearerAuth": [] },
                    { "apiKeyAuth": [] }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShortenRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "URL shortened successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Url"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid URL format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Missing or invalid authentication"
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/history": {
            "get": {
                "summary": "Get URL shortening history for the authenticated user",
                "description": "Retrieves a list of all shortened URLs created by the authenticated user with basic stats. Requires JWT or API key authentication.",
                "tags": ["URL Management"],
                "security": [
                    { "bearerAuth": [] },
                    { "apiKeyAuth": [] }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": { "type": "boolean" },
                                        "data": {
                                            "type": "array",
                                            "items": { "$ref": "#/components/schemas/UrlHistory" }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Missing or invalid authentication"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/{code}": {
            "get": {
                "summary": "Redirect to original URL",
                "description": "Redirects to the original URL and increments click count",
                "tags": [
                    "URL Management"
                ],
                "security": [
                    {
                        "rateLimit": []
                    }
                ],
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The unique URL code"
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Redirect to original URL"
                    },
                    "404": {
                        "description": "URL not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/stats/{code}": {
            "get": {
                "summary": "Get URL statistics",
                "description": "Retrieves detailed statistics for a specific shortened URL",
                "tags": [
                    "URL Management"
                ],
                "security": [
                    {
                        "rateLimit": []
                    }
                ],
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The unique URL code"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Url"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "URL not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "summary": "Health check",
                "description": "Returns the health status of the server",
                "tags": [
                    "System"
                ],
                "responses": {
                    "200": {
                        "description": "Server is healthy",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "uptime": {
                                            "type": "number"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "summary": "Register a new user",
                "tags": ["Authentication"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": { "$ref": "#/components/schemas/RegisterRequest" }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully"
                    },
                    "400": {
                        "description": "Missing email or password"
                    },
                    "409": {
                        "description": "Email already registered"
                    },
                    "500": {
                        "description": "Registration failed"
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "summary": "Login and receive JWT token",
                "tags": ["Authentication"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": { "$ref": "#/components/schemas/LoginRequest" }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful, returns JWT token and user info",
                        "content": {
                            "application/json": {
                                "schema": { "$ref": "#/components/schemas/LoginResponse" },
                                "example": {
                                    "token": "<JWT_TOKEN>",
                                    "user": {
                                        "_id": "...",
                                        "name": "John Doe",
                                        "email": "user@example.com"
                                    }
                                }
                            }
                        }
                    },
                    "400": { "description": "Missing email or password" },
                    "401": { "description": "Invalid credentials" },
                    "500": { "description": "Login failed" }
                }
            }
        },
        "/auth/api-keys": {
            "get": {
                "summary": "List user's API keys",
                "tags": ["Authentication"],
                "security": [{ "bearerAuth": [] }],
                "responses": {
                    "200": {
                        "description": "List of API keys",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "apiKeys": {
                                            "type": "array",
                                            "items": { "$ref": "#/components/schemas/ApiKey" }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": { "description": "Missing or invalid token" },
                    "404": { "description": "User not found" }
                }
            },
            "post": {
                "summary": "Generate a new API key (max 5 per user)",
                "tags": ["Authentication"],
                "security": [{ "bearerAuth": [] }],
                "responses": {
                    "201": {
                        "description": "API key generated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "apiKey": { "type": "string" }
                                    }
                                }
                            }
                        }
                    },
                    "400": { "description": "Maximum 5 API keys allowed" },
                    "401": { "description": "Missing or invalid token" },
                    "404": { "description": "User not found" }
                }
            }
        },
        "/auth/api-keys/{keyId}": {
            "delete": {
                "summary": "Revoke an API key",
                "tags": ["Authentication"],
                "security": [{ "bearerAuth": [] }],
                "parameters": [
                    {
                        "name": "keyId",
                        "in": "path",
                        "required": true,
                        "schema": { "type": "string" },
                        "description": "The ID of the API key to revoke"
                    }
                ],
                "responses": {
                    "200": { "description": "API key revoked" },
                    "401": { "description": "Missing or invalid token" },
                    "404": { "description": "User or API key not found" }
                }
            }
        },
        "/auth/me": {
            "get": {
                "summary": "Get current user profile",
                "tags": ["Authentication"],
                "security": [{ "bearerAuth": [] }],
                "responses": {
                    "200": {
                        "description": "Current user info",
                        "content": {
                            "application/json": {
                                "schema": { "$ref": "#/components/schemas/User" }
                            }
                        }
                    },
                    "401": { "description": "Missing or invalid token" },
                    "404": { "description": "User not found" }
                }
            },
            "put": {
                "summary": "Update user profile (name/email)",
                "tags": ["Authentication"],
                "security": [{ "bearerAuth": [] }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": { "$ref": "#/components/schemas/UpdateProfileRequest" }
                        }
                    }
                },
                "responses": {
                    "200": { "description": "Profile updated" },
                    "400": { "description": "Name or email required" },
                    "401": { "description": "Missing or invalid token" },
                    "404": { "description": "User not found" }
                }
            }
        },
        "/auth/me/password": {
            "put": {
                "summary": "Change user password",
                "tags": ["Authentication"],
                "security": [{ "bearerAuth": [] }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": { "$ref": "#/components/schemas/ChangePasswordRequest" }
                        }
                    }
                },
                "responses": {
                    "200": { "description": "Password updated" },
                    "400": { "description": "Old and new password required" },
                    "401": { "description": "Missing or invalid token or old password incorrect" },
                    "404": { "description": "User not found" }
                }
            }
        },
        "/metrics": {
            "get": {
                "summary": "Get site-wide metrics",
                "description": "Returns the total number of users, total number of shortened URLs, and total number of clicks across all URLs.",
                "tags": ["System"],
                "responses": {
                    "200": {
                        "description": "Metrics fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": { "$ref": "#/components/schemas/MetricsResponse" },
                                "example": {
                                    "totalUsers": 123,
                                    "totalUrls": 456,
                                    "totalClicks": 7890
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to fetch metrics"
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "URL Management",
            "description": "Endpoints for managing URL shortening and statistics"
        },
        {
            "name": "System",
            "description": "System health and status endpoints"
        },
        { "name": "Authentication", "description": "User registration, login, and API key management" }
    ]
}